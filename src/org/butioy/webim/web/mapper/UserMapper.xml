<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="org.butioy.webim.web.dao.IUserDao">

	<resultMap id="RM_User" type="org.butioy.webim.web.domain.User">
		<result property="id" column="ID"/>
		<result property="nickName" column="NICK_NAME"/>
		<result property="realName" column="REAL_NAME"/>
		<result property="account" column="ACCOUNT"/>
		<result property="password" column="PASSWORD"/>
		<result property="img" column="IMG"/>
		<result property="createTime" column="CREATE_TIME"/>
		<result property="updateTime" column="UPDATE_TIME"/>
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="select_all_column">
	    <![CDATA[
		ID,NICK_NAME,REAL_NAME,ACCOUNT,PASSWORD,IMG,CREATE_TIME,UPDATE_TIME
		]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="insert" parameterType="org.butioy.webim.web.domain.User" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
		INSERT INTO im_user (
			ID, NICK_NAME, REAL_NAME, ACCOUNT, PASSWORD, IMG, CREATE_TIME, UPDATE_TIME
		) VALUES (
			#{id}, #{nickName}, #{realName}, #{account}, #{password}, #{img}, #{createTime}, #{updateTime}
		)
		]]>
	</insert>

	<insert id="batchInsert" parameterType="list" useGeneratedKeys="true">
		INSERT INTO im_user
		(ID,NICK_NAME,REAL_NAME,ACCOUNT,PASSWORD,IMG,CREATE_TIME,UPDATE_TIME) VALUES
		<foreach collection ="list" item ="item" index ="index" separator =",">
			(#{item.id},#{item.nickName},#{item.realName},#{item.account},#{item.password},#{item.img},#{item.createTime},#{item.updateTime})
		</foreach>
	</insert>

	<update id="update" parameterType="org.butioy.webim.web.domain.User">
    <![CDATA[
		UPDATE im_user SET
			NICK_NAME = #{nickName} , REAL_NAME = #{realName} , ACCOUNT = #{account} , PASSWORD = #{password} , IMG = #{img} , CREATE_TIME = #{createTime} , UPDATE_TIME = #{updateTime}
		WHERE
			ID = #{id}
		]]>
	</update>

	<delete id="deleteById" parameterType="int">
		<![CDATA[
		DELETE FROM im_user WHERE
			ID = #{id} 
		]]>
    </delete>

	<delete id="deleteByIds" parameterType="string">
		<![CDATA[
		DELETE FROM im_user WHERE
			ID IN (#{value})
		]]>
	</delete>

	<delete id="deleteByParam" parameterType="map">
		DELETE FROM im_user
		<where>
			<if test="@Ognl@isNotEmpty(id)">
				AND ID = #{id}
			</if>
			<if test="@Ognl@isNotEmpty(nickName)">
				AND NICK_NAME = #{nickName}
			</if>
			<if test="@Ognl@isNotEmpty(realName)">
				AND REAL_NAME = #{realName}
			</if>
			<if test="@Ognl@isNotEmpty(account)">
				AND ACCOUNT = #{account}
			</if>
			<if test="@Ognl@isNotEmpty(password)">
				AND PASSWORD = #{password}
			</if>
			<if test="@Ognl@isNotEmpty(img)">
				AND IMG = #{img}
			</if>
			<if test="@Ognl@isNotEmpty(createTime)">
				AND CREATE_TIME = #{createTime}
			</if>
			<if test="@Ognl@isNotEmpty(updateTime)">
				AND UPDATE_TIME = #{updateTime}
			</if>
		</where>
	</delete>

	<select id="findById" resultMap="RM_User">
		SELECT <include refid="select_all_column" />
		<![CDATA[
		    FROM im_user 
	        WHERE 
		        ID = #{id} 
	    ]]>
	</select>

	<select id="findList" resultMap="RM_User" parameterType="map">
		SELECT <include refid="select_all_column"/>
		FROM im_user
		<where>
			<if test="@Ognl@isNotEmpty(id)">
				AND ID = #{id}
			</if>
			<if test="@Ognl@isNotEmpty(nickName)">
				AND NICK_NAME = #{nickName}
			</if>
			<if test="@Ognl@isNotEmpty(realName)">
				AND REAL_NAME = #{realName}
			</if>
			<if test="@Ognl@isNotEmpty(account)">
				AND ACCOUNT = #{account}
			</if>
			<if test="@Ognl@isNotEmpty(password)">
				AND PASSWORD = #{password}
			</if>
			<if test="@Ognl@isNotEmpty(img)">
				AND IMG = #{img}
			</if>
			<if test="@Ognl@isNotEmpty(createTime)">
				AND CREATE_TIME = #{createTime}
			</if>
			<if test="@Ognl@isNotEmpty(updateTime)">
				AND UPDATE_TIME = #{updateTime}
			</if>
		</where>
	</select>

    <select id="findByUserCode" resultMap="RM_User" parameterType="string">
	    SELECT <include refid="select_all_column"/>
	    FROM im_user
		<where>
			ACCOUNT=#{0}
		</where>
    </select>

</mapper>